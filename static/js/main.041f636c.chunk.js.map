{"version":3,"sources":["api/_base.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/users.js","App.jsx","api/todos.js","index.js"],"names":["get","url","fetch","then","response","ok","json","Promise","reject","result","data","TodoList","state","filterTitle","sortTodos","todos","filter","todo","completed","checkTitle","title","titleFilter","includes","this","props","onSelectedUserId","onUserSelected","visibleTodos","className","type","value","onChange","event","setState","target","name","map","key","id","classNames","TodoList__item","checked","readOnly","userId","button","onClick","React","Component","defaultProps","CurrentUser","user","loadUser","prevProps","clearUser","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"2UAEaA,G,YAAM,SAAAC,GAAG,OAAIC,MAAM,GAAD,OAFd,kCAEc,OAAeD,IAC3CE,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,YAEhBL,MAAK,SAAAM,GAAM,OAAIA,EAAOC,U,uBCJZC,G,MAAb,4MACEC,MAAQ,CACNC,YAAa,GACbC,UAAW,OAHf,EAMEA,UAAY,SAACC,GACX,OAAQ,EAAKH,MAAME,WACjB,IAAK,SACH,OAAOC,EAAMC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aACpC,IAAK,YACH,OAAOH,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aACnC,QACE,OAAOH,IAbf,EAiBEI,WAAa,SAACC,EAAOC,GAAR,OAAwBD,GAASA,EAAME,SAASD,IAjB/D,4CAmBE,WAAU,IAAD,OACP,EAIIE,KAAKC,MAHPT,EADF,EACEA,MACAU,EAFF,EAEEA,iBACAC,EAHF,EAGEA,eAGF,EAGIH,KAAKX,MAFPC,EADF,EACEA,YACAC,EAFF,EAEEA,UAGIa,EAAeJ,KAAKT,UAAL,YAAmBC,IAExC,OACE,yBAAKa,UAAU,YACb,sCAEA,2BACEC,KAAK,OACLC,MAAOjB,EACPkB,SAAU,SAACC,GACT,EAAKC,SAAS,CAAEpB,YAAamB,EAAME,OAAOJ,WAI9C,4BACEK,KAAK,YACLL,MAAOhB,EACPiB,SAAU,SAACC,GACT,EAAKC,SAAS,CAAEnB,UAAWkB,EAAME,OAAOJ,UAG1C,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,cAGF,yBAAKF,UAAU,4BACb,wBAAIA,UAAU,kBACXD,EAAaS,KAAI,SAAAnB,GAAI,OACpB,EAAKE,WAAWF,EAAKG,MAAOP,GAC1B,wBACEwB,IAAKpB,EAAKqB,GACVV,UAAWW,IAAW,CACpBC,gBAAgB,EAChB,0BAA2BvB,EAAKC,UAChC,6BAA8BD,EAAKC,aAIrC,+BACE,2BAAOW,KAAK,WAAWY,QAASxB,EAAKC,UAAWwB,UAAQ,IACxD,2BAAIzB,EAAKG,QAGVH,EAAK0B,QACN,4BACEf,UAAWW,IAAW,CACpB,yBAAyB,EACzBK,QAAQ,EACR,kCACEnB,IAAqBR,EAAK0B,SAE9Bd,KAAK,SACLgB,QAAS,WACPnB,EAAeT,EAAK0B,UATxB,WAaG1B,EAAK0B,SAIR,aA7FlB,GAA8BG,IAAMC,YAmHpCpC,EAASqC,aAAe,CACtBjC,MAAO,GACPU,iBAAkB,G,UCpHPwB,EAAb,4MACErC,MAAQ,CACNsC,KAAM,MAFV,uDAKE,WACE3B,KAAK4B,aANT,gCASE,SAAmBC,GACbA,EAAUT,SAAWpB,KAAKC,MAAMmB,QAIpCpB,KAAK4B,aAdT,sBAiBE,WAAY,ICtBSR,EDsBV,QCtBUA,EDuBXpB,KAAKC,MAAMmB,OCvBU3C,EAAI,UAAD,OAAW2C,KDwBxCxC,MAAK,SAAC+C,GACL,EAAKjB,SAAS,CAAEiB,cApBxB,oBAwBE,WACE,MAA8B3B,KAAKC,MAA3BmB,EAAR,EAAQA,OAAQU,EAAhB,EAAgBA,UACRH,EAAS3B,KAAKX,MAAdsC,KAER,OACE,yBAAKtB,UAAU,eACb,wBAAIA,UAAU,sBACZ,+CAEGe,IAIHO,EAGA,oCACE,wBAAItB,UAAU,qBAAqBsB,EAAKf,MACxC,uBAAGP,UAAU,sBAAsBsB,EAAKI,OACxC,uBAAG1B,UAAU,sBAAsBsB,EAAKK,OAExC,4BACE1B,KAAK,SACLD,UAAU,4BACViB,QAAS,WACPQ,MAJJ,eAPF,8CAtCV,GAAiCP,IAAMC,WEgDxBS,E,4MA5Cb5C,MAAQ,CACNG,MAAO,GACPU,iBAAkB,G,uDAGpB,WAAqB,IAAD,OCdQzB,EAAI,UDgB3BG,MAAK,SAACY,GACL,EAAKkB,SAAS,CAAElB,e,oBAItB,WAAU,IAAD,OACP,EAAoCQ,KAAKX,MAAjCG,EAAR,EAAQA,MAAOU,EAAf,EAAeA,iBAEf,OACE,yBAAKG,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEb,MAAOA,EACPU,iBAAkBA,EAClBC,eAAgB,SAACiB,GACf,EAAKV,SAAS,CAAER,iBAAkBkB,QAKxC,yBAAKf,UAAU,gBACb,yBAAKA,UAAU,0BACZH,EACC,kBAAC,EAAD,CACEkB,OAAQlB,EACR4B,UAAW,WACT,EAAKpB,SAAS,CAAER,iBAAkB,OAGpC,0B,GArCEqB,IAAMC,WENxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.041f636c.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const get = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject();\n  })\n  .then(result => result.data);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    filterTitle: '',\n    sortTodos: 'all',\n  }\n\n  sortTodos = (todos) => {\n    switch (this.state.sortTodos) {\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n      default:\n        return todos;\n    }\n  }\n\n  checkTitle = (title, titleFilter) => title && title.includes(titleFilter);\n\n  render() {\n    const {\n      todos,\n      onSelectedUserId,\n      onUserSelected,\n    } = this.props;\n\n    const {\n      filterTitle,\n      sortTodos,\n    } = this.state;\n\n    const visibleTodos = this.sortTodos([...todos]);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          type=\"text\"\n          value={filterTitle}\n          onChange={(event) => {\n            this.setState({ filterTitle: event.target.value });\n          }}\n        />\n\n        <select\n          name=\"sortTodos\"\n          value={sortTodos}\n          onChange={(event) => {\n            this.setState({ sortTodos: event.target.value });\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              this.checkTitle(todo.title, filterTitle) ? (\n                <li\n                  key={todo.id}\n                  className={classNames({\n                    TodoList__item: true,\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  })}\n                >\n\n                  <label>\n                    <input type=\"checkbox\" checked={todo.completed} readOnly />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  {todo.userId && (\n                  <button\n                    className={classNames({\n                      'TodoList__user-button': true,\n                      button: true,\n                      'TodoList__user-button--selected':\n                        onSelectedUserId === todo.userId,\n                    })}\n                    type=\"button\"\n                    onClick={() => {\n                      onUserSelected(todo.userId);\n                    }}\n                  >\n                    User&nbsp;\n                    {todo.userId}\n                  </button>\n                  )}\n                </li>\n              ) : ''\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      userId: PropTypes.number,\n    }),\n  ),\n  onSelectedUserId: PropTypes.number,\n  onUserSelected: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n  onSelectedUserId: 0,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CurrentUser.scss';\n\nimport { getUser } from '../../api/users';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    this.loadUser();\n  }\n\n  loadUser() {\n    getUser(this.props.userId)\n      .then((user) => {\n        this.setState({ user });\n      });\n  }\n\n  render() {\n    const { userId, clearUser } = this.props;\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {userId}\n          </span>\n        </h2>\n\n        {!user ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n            <button\n              type=\"button\"\n              className=\"CurrentUser__clear button\"\n              onClick={() => {\n                clearUser();\n              }}\n            >\n              Clear User\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import { get } from './_base';\n\nexport const getUser = userId => get(`/users/${userId}`);\n","import React from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { getTodos } from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    onSelectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({ todos });\n      });\n  }\n\n  render() {\n    const { todos, onSelectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onSelectedUserId={onSelectedUserId}\n            onUserSelected={(userId) => {\n              this.setState({ onSelectedUserId: userId });\n            }}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {onSelectedUserId ? (\n              <CurrentUser\n                userId={onSelectedUserId}\n                clearUser={() => {\n                  this.setState({ onSelectedUserId: 0 });\n                }}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { get } from './_base';\n\nexport const getTodos = () => get('/todos');\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}